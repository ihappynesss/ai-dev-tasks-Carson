# NSW Strata Automation - Nginx SSL/TLS Configuration
# Task 13.1: HTTPS with valid SSL certificates
# Date: 2025-10-15

# ==================================================
# HTTP to HTTPS Redirect
# ==================================================
server {
    listen 80;
    listen [::]:80;
    server_name nsw-strata.example.com;

    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# ==================================================
# HTTPS Server Block - n8n
# ==================================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name nsw-strata.example.com;

    # SSL Certificate Configuration
    # Let's Encrypt certificates
    ssl_certificate /etc/letsencrypt/live/nsw-strata.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/nsw-strata.example.com/privkey.pem;

    # Commercial SSL alternative (uncomment if using commercial cert)
    # ssl_certificate /etc/nginx/ssl/commercial-cert.crt;
    # ssl_certificate_key /etc/nginx/ssl/commercial-cert.key;
    # ssl_trusted_certificate /etc/nginx/ssl/ca-bundle.crt;

    # ==================================================
    # SSL/TLS Configuration - Modern (Mozilla Intermediate)
    # ==================================================
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # SSL Session Settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # ==================================================
    # Security Headers
    # ==================================================
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.openai.com https://api.anthropic.com; frame-ancestors 'none';" always;

    # X-Frame-Options
    add_header X-Frame-Options "DENY" always;

    # X-Content-Type-Options
    add_header X-Content-Type-Options "nosniff" always;

    # X-XSS-Protection
    add_header X-XSS-Protection "1; mode=block" always;

    # Referrer Policy
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Permissions Policy
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # ==================================================
    # Logging
    # ==================================================
    access_log /var/log/nginx/n8n-access.log combined;
    error_log /var/log/nginx/n8n-error.log warn;

    # ==================================================
    # Rate Limiting
    # ==================================================
    limit_req_zone $binary_remote_addr zone=n8n_limit:10m rate=10r/s;
    limit_req zone=n8n_limit burst=20 nodelay;

    # ==================================================
    # n8n Reverse Proxy
    # ==================================================
    location / {
        proxy_pass http://n8n:5678;
        proxy_http_version 1.1;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # ==================================================
    # Webhook Endpoint (separate rate limit)
    # ==================================================
    location /webhook {
        limit_req_zone $binary_remote_addr zone=webhook_limit:10m rate=50r/s;
        limit_req zone=webhook_limit burst=100 nodelay;

        proxy_pass http://n8n:5678/webhook;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Webhook-specific timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }

    # ==================================================
    # Metrics Endpoint (protected)
    # ==================================================
    location /metrics {
        # Restrict to internal monitoring
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;

        proxy_pass http://n8n:5678/metrics;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# ==================================================
# HTTPS Server Block - Grafana
# ==================================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name grafana.nsw-strata.example.com;

    # SSL Certificate (same as main domain or separate subdomain cert)
    ssl_certificate /etc/letsencrypt/live/nsw-strata.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/nsw-strata.example.com/privkey.pem;

    # SSL Configuration (same as above)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Security Headers (same as above)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;

    # Grafana Reverse Proxy
    location / {
        proxy_pass http://grafana:3000;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# ==================================================
# HTTPS Server Block - Prometheus
# ==================================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name prometheus.nsw-strata.example.com;

    # SSL Certificate
    ssl_certificate /etc/letsencrypt/live/nsw-strata.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/nsw-strata.example.com/privkey.pem;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
    add_header X-Frame-Options "DENY" always;

    # Basic Auth for Prometheus
    auth_basic "Prometheus Access";
    auth_basic_user_file /etc/nginx/.htpasswd;

    # Prometheus Reverse Proxy
    location / {
        proxy_pass http://prometheus:9090;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
